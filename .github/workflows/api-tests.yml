name: API Tests - User Management

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  workflow_dispatch:

jobs:
  api-tests:
    name: Run API Tests
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
      
      - name: Install dependencies
        run: npm install
      
      - name: Create reports directory
        run: mkdir -p reports
      
      - name: Run Newman tests
        run: npm run test:ci
        continue-on-error: true
      
      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-results
          path: reports/
          retention-days: 30
      
      - name: Upload HTML report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: html-report
          path: reports/newman-report.html
          retention-days: 30
      
      - name: Upload JSON report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: json-report
          path: reports/newman-report.json
          retention-days: 30
      
      - name: Check test results
        run: |
          if [ -f reports/newman-report.json ]; then
            echo "✅ Test execution completed"
            cat reports/newman-report.json | jq '.run.stats'
          else
            echo "❌ Test execution failed"
            exit 1
          fi
      
      - name: Comment PR with results
        if: github.event_name == 'pull_request' && always()
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            if (fs.existsSync('reports/newman-report.json')) {
              const report = JSON.parse(fs.readFileSync('reports/newman-report.json', 'utf8'));
              const stats = report.run.stats;
              const failures = report.run.failures;
              
              let comment = `## 🧪 API Test Results\n\n`;
              comment += `| Metric | Value |\n`;
              comment += `|--------|-------|\n`;
              comment += `| Total Requests | ${stats.requests.total} |\n`;
              comment += `| Total Tests | ${stats.assertions.total} |\n`;
              comment += `| Passed | ✅ ${stats.assertions.total - stats.assertions.failed} |\n`;
              comment += `| Failed | ❌ ${stats.assertions.failed} |\n`;
              
              if (failures.length > 0) {
                comment += `\n### ❌ Failed Tests:\n\n`;
                failures.forEach(failure => {
                  comment += `- **${failure.source.name}**: ${failure.error.message}\n`;
                });
              } else {
                comment += `\n### ✅ All tests passed!\n`;
              }
              
              github.rest.issues.createComment({
                issue_number: context.issue.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body: comment
              });
            }
      
      - name: Publish test summary
        if: always()
        run: |
          echo "# 📊 Test Execution Summary" >> $GITHUB_STEP_SUMMARY
          if [ -f reports/newman-report.json ]; then
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "## Statistics" >> $GITHUB_STEP_SUMMARY
            cat reports/newman-report.json | jq -r '.run.stats | 
              "- **Total Requests**: \(.requests.total)\n" +
              "- **Total Tests**: \(.assertions.total)\n" +
              "- **Passed**: ✅ \(.assertions.total - .assertions.failed)\n" +
              "- **Failed**: ❌ \(.assertions.failed)\n" +
              "- **Total Time**: \(.requests.total)ms"' >> $GITHUB_STEP_SUMMARY
            
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "## 📥 Artifacts" >> $GITHUB_STEP_SUMMARY
            echo "- HTML Report: Available in artifacts" >> $GITHUB_STEP_SUMMARY
            echo "- JSON Report: Available in artifacts" >> $GITHUB_STEP_SUMMARY
          fi
